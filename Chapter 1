
/**
Router Functions
**/

//Traditional Way
@RestController
public class ProductController {
@Autowired
ProductService productService;
@RequestMapping("/product")
public List<Product> productListing(){
return productService.getAllProducts();
}
}

//Reactive Way
@Bean
public class RouterFunction<ServerResponse> products(ProductService
productService) {
return route().GET("/product", request -> ok().body(productService.
getAllProducts())).build();
}

=========================


Webflux Security

@EnableWebfluxSecurity
public class WebFluxSecurityConfig {
	
	@Bean
	public MapReactiveUserDetailsService userDetailsService(){
		UserDetails user = User.withDefaultPasswordEncoder()
			.username("test")
			.password("123")
			.roles("USER")
			.build();

	return new MapReactiveUserDetailsService(user);		

	}
}

=========================

/** 
Hello World Example in Spring Webflux:
**/
// Main Class
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ConfigurableApplicationContext;

@SpringBootApplication
public class Application {
	public static void main(String[] args){ 
		ConfigurableApplicationContext context = SpringApplication.run(Application.class, args);
		HelloWorldClient helloWorldClient = context.getBean(HelloWorldClient.class);
	}
}

// Handler
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.springframework.web.reactive.function.BodyInserters;
import org.springframework.web.reactive.function.server.ServerRequest;
import org.springframework.web.reactive.function.server.ServerResponse;

import reactor.core.publisher.Mono;

@Component
public class HelloWorldHandler {

	public Mono<ServerResponse> hello(ServerRequest request) {
		return ServerResponse.ok().contentType(MediaType.TEXT_PLAIN)
			.body(BodyInserters.fromObject("Hello World!"));
	}
}

// Router
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.MediaType;
import org.springframework.web.reactive.function.server.RequestPredicates;
import org.springframework.web.reactive.function.server.RouterFunction;
import org.springframework.web.reactive.function.server.RouterFunctions;
import org.springframework.web.reactive.function.server.ServerResponse;

@Configuration
public class HelloWorldRouter {

	@Bean
	public RouterFunction<ServerResponse> routeHelloWorld(HelloWorldHandler helloWorldHandler) {

		return RouterFunctions.route(RequestPredicates.GET("/")
                .and(RequestPredicates.accept(MediaType.TEXT_PLAIN)), helloWorldHandler::hello);
	}
}


//WebCLient

import reactor.core.Publisher.Mono;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.springframework.web.reactive.function.client.WebClient;

@Component
public class HelloWorldWebClient{
	
	private final WebClient client;

	public HelloWorldWebClient(WebClient.Builder builder){
		this.client= builder.baseUrl("http://localhost:8080").build();
	}

	public Mono<String> getMessage() {
		return this.client.get().uri("/")
		.exchangeToMono((response) -> response.bodyToMono(String.class));
	}
}

